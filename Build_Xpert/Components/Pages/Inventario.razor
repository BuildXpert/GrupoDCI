@page "/Inventario/{projectId:int}"
@using Build_Xpert.Model
@using Build_Xpert.Services
@inject InventoryService InventoryService
@inject NavigationManager Navigation
@inject ProveedorService ProveedorService

<style>
    .inventario-container {
        background-color: #fff;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        padding: 30px;
    }

    .search-bar {
        max-width: 300px;
    }

    .table th {
        background-color: #f8f9fa;
        font-weight: bold;
    }

    .table td, .table th {
        vertical-align: middle;
    }

    .badge-categoria {
        background-color: #e0e0e0;
        font-size: 0.85rem;
        padding: 4px 8px;
        border-radius: 8px;
    }

    .titulo-seccion {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
    }
</style>

<div class="container mt-5 inventario-container">
    <div class="titulo-seccion">
        <h3>📦 Inventario del Proyecto</h3>
        <button class="btn btn-outline-secondary" @onclick="Volver">
            ← Volver
        </button>
    </div>

    @if (productos == null)
    {
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
            <p class="mt-2">Cargando inventario...</p>
        </div>
    }
    else
    {
        <div class="d-flex gap-3 align-items-center mb-4">
            <input type="text" class="form-control search-bar" placeholder="🔍 Buscar producto..."
                   @bind="textoBusqueda" @bind:event="oninput" />
            <select class="form-select w-auto" @bind="categoriaSeleccionada">
                @foreach (var cat in categoriasDisponibles)
                {
                    <option value="@cat">@cat</option>
                }
            </select>
            <button class="btn btn-success" @onclick="AgregarProducto">
                ➕ Agregar Producto
            </button>
        </div>

        @if (!ProductosFiltrados.Any())
        {
            <div class="alert alert-warning">No hay productos con los filtros actuales.</div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-bordered table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>📂 Nombre</th>
                            <th>📂 Categoría</th>
                            <th>📦 Stock</th>
                            <th>💰 Precio</th>
                            <th>👷 Proveedor</th>
                            <th class="text-center">⚙️ Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var producto in ProductosFiltrados)
                        {
                            <tr>
                                <td>@producto.Nombre</td>
                                <td><span class="badge-categoria">@producto.Categoria</span></td>
                                <td>@producto.Stock</td>
                                <td>₡@producto.Precio.ToString("N2")</td>
                                <td>@producto.Proveedor?.Nombre</td>
                                <td class="text-center">
                                    <button class="btn btn-warning btn-sm me-1" @onclick="() => EditarProducto(producto.Id)">✏️</button>
                                    <button class="btn btn-danger btn-sm me-1" @onclick="() => EliminarProducto(producto.Id)">🗑️</button>
                                    <button class="btn btn-outline-secondary btn-sm" @onclick="() => DesasociarProducto(producto.Id)">Desasociar</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    }

    @if (showModal)
    {
        <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Agregar Producto</h5>
                        <button type="button" class="btn-close" @onclick="CerrarModal"></button>
                    </div>
                    <div class="modal-body">
                        @if (showValidationError)
                        {
                            <div class="alert alert-danger">Todos los campos son obligatorios y deben tener valores válidos.</div>
                        }
                        <div class="mb-3">
                            <label>Nombre</label>
                            <input class="form-control" @bind="nuevoProducto.Nombre" />
                        </div>
                        <div class="mb-3">
                            <label>Categoría</label>
                            <select class="form-control" @bind="nuevoProducto.Categoria">
                                <option value="">-- Seleccione una categoría --</option>
                                <option value="Servicio">Servicio</option>
                                <option value="Material de obra">Material de obra</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label>Stock</label>
                            <input type="number" class="form-control" @bind="nuevoProducto.Stock" />
                        </div>
                        <div class="mb-3">
                            <label>Proveedor</label>
                            <select class="form-control" @bind="nuevoProducto.ProveedorId">
                                <option value="0">-- Selecciona un proveedor --</option>
                                @foreach (var prov in proveedores)
                                {
                                    <option value="@prov.Id">@prov.Nombre</option>
                                }
                            </select>
                        </div>
                        <div class="mb-3">
                            <label>Precio</label>
                            <input type="number" step="0.01" class="form-control" @bind="nuevoProducto.Precio" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary" @onclick="CerrarModal">Cancelar</button>
                        <button class="btn btn-primary" @onclick="GuardarProducto">Guardar</button>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (showEditModal)
    {
        <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Editar Producto</h5>
                        <button type="button" class="btn-close" @onclick="CerrarEditModal"></button>
                    </div>
                    <div class="modal-body">
                        @if (showEditValidationError)
                        {
                            <div class="alert alert-danger">Todos los campos son obligatorios y deben tener valores válidos.</div>
                        }
                        <div class="mb-3">
                            <label>Nombre</label>
                            <input class="form-control" @bind="productoEnEdicion.Nombre" />
                        </div>
                        <div class="mb-3">
                            <label>Categoría</label>
                            <select class="form-control" @bind="productoEnEdicion.Categoria">
                                <option value="">-- Seleccione una categoría --</option>
                                <option value="Servicio">Servicio</option>
                                <option value="Material de obra">Material de obra</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label>Stock</label>
                            <input type="number" class="form-control" @bind="productoEnEdicion.Stock" />
                        </div>
                        <div class="mb-3">
                            <label>Proveedor</label>
                            <select class="form-control" @bind="productoEnEdicion.ProveedorId">
                                <option value="0">-- Selecciona un proveedor --</option>
                                @foreach (var prov in proveedores)
                                {
                                    <option value="@prov.Id">@prov.Nombre</option>
                                }
                            </select>
                        </div>
                        <div class="mb-3">
                            <label>Precio</label>
                            <input type="number" step="0.01" class="form-control" @bind="productoEnEdicion.Precio" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary" @onclick="CerrarEditModal">Cancelar</button>
                        <button class="btn btn-primary" @onclick="GuardarCambiosProducto">Guardar Cambios</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public int projectId { get; set; }

    private List<InventoryItem> productos;
    private InventoryItem nuevoProducto = new();
    private InventoryItem productoEnEdicion = new();
    private List<Proveedor> proveedores = new();

    private string textoBusqueda = "";
    private string categoriaSeleccionada = "Todas";
    private List<string> categoriasDisponibles = new() { "Todas", "Servicio", "Material de obra" };

    private bool showModal = false;
    private bool showValidationError = false;
    private bool showEditModal = false;
    private bool showEditValidationError = false;

    private IEnumerable<InventoryItem> ProductosFiltrados =>
        productos
            .Where(p => (categoriaSeleccionada == "Todas" || p.Categoria == categoriaSeleccionada)
                && (string.IsNullOrWhiteSpace(textoBusqueda) || p.Nombre.Contains(textoBusqueda, StringComparison.OrdinalIgnoreCase)));

    protected override async Task OnInitializedAsync()
    {
        productos = await InventoryService.GetByProjectIdAsync(projectId);
        proveedores = await ProveedorService.GetProveedoresAsync();
    }

    private void Volver() => Navigation.NavigateTo("/");

    private void AgregarProducto()
    {
        nuevoProducto = new InventoryItem { ProjectId = projectId };
        showValidationError = false;
        showModal = true;
    }

    private async Task GuardarProducto()
    {
        if (string.IsNullOrWhiteSpace(nuevoProducto.Nombre) || string.IsNullOrWhiteSpace(nuevoProducto.Categoria) || nuevoProducto.Stock <= 0 || nuevoProducto.Precio <= 0 || nuevoProducto.ProveedorId == 0)
        {
            showValidationError = true;
            return;
        }

        await InventoryService.AddAsync(nuevoProducto);
        productos = await InventoryService.GetByProjectIdAsync(projectId);
        showModal = false;
    }

    private void CerrarModal() => showModal = false;
    private void CerrarEditModal() => showEditModal = false;

    private void EditarProducto(int id)
    {
        var producto = productos.FirstOrDefault(p => p.Id == id);
        if (producto != null)
        {
            productoEnEdicion = new InventoryItem
                {
                    Id = producto.Id,
                    Nombre = producto.Nombre,
                    Categoria = producto.Categoria,
                    Stock = producto.Stock,
                    Precio = producto.Precio,
                    ProveedorId = producto.ProveedorId,
                    ProjectId = producto.ProjectId
                };
            showEditValidationError = false;
            showEditModal = true;
        }
    }

    private async Task GuardarCambiosProducto()
    {
        if (string.IsNullOrWhiteSpace(productoEnEdicion.Nombre) || string.IsNullOrWhiteSpace(productoEnEdicion.Categoria) || productoEnEdicion.Stock <= 0 || productoEnEdicion.Precio <= 0 || productoEnEdicion.ProveedorId == 0)
        {
            showEditValidationError = true;
            return;
        }

        await InventoryService.UpdateAsync(productoEnEdicion);
        productos = await InventoryService.GetByProjectIdAsync(projectId);
        showEditModal = false;
    }

    private async Task EliminarProducto(int id)
    {
        await InventoryService.DeleteAsync(id);
        productos = await InventoryService.GetByProjectIdAsync(projectId);
    }

    private async Task DesasociarProducto(int id)
    {
        await InventoryService.DesasociarDeProyectoAsync(id);
        productos = await InventoryService.GetByProjectIdAsync(projectId);
    }
}
